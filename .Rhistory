i <- 1
k_list = c(1,10,50,100)
for (k in k_list){
knn_model <- knnreg(Survived~Fare+Sex, data = titanic_data, k = k)
#  Predictions
preds <-
titanic_data %>%
add_predictions(knn_model) %>%
select(Sex, Fare, Survived, pred)
MSE <- round(MSE(preds$pred,preds$Survived),4)
# Plotting
p[[i]] <- graph_1_2 +
geom_line(aes(x=Fare,y= pred,color = Sex),  data = preds ) +
theme(plot.title = element_text(size=12), axis.text = element_text(size=5), axis.title = element_text(size=5)) +
ggtitle(paste0("K = ", k, "  MSE = ", MSE))
i <- i + 1
}
gridExtra::grid.arrange(grobs = p , ncol=2)
preds_glm <-
titanic_data %>%
add_predictions(model_glm) %>%
select(Sex, Fare, Survived, pred)
paste0("The MSE of the GLM is  :",round(MSE(preds_glm$pred,preds$Survived),4))
options(repr.plot.height = 400, repr.plot.width = 60)
p <- list()
i <- 1
k_list = c(1,10,50,100)
for (k in k_list){
knn_model <- knnreg(Survived~Fare+Sex, data = titanic_data, k = k)
#  Predictions
preds <-
titanic_data %>%
add_predictions(knn_model,type = "response") %>%
select(Sex, Fare, Survived, pred)
MSE <- round(MSE(preds$pred,preds$Survived),4)
# Plotting
p[[i]] <- graph_1_2 +
geom_line(aes(x=Fare,y= pred,color = Sex),  data = preds ) +
theme(plot.title = element_text(size=12), axis.text = element_text(size=5), axis.title = element_text(size=5)) +
ggtitle(paste0("K = ", k, "  MSE = ", MSE))
i <- i + 1
}
gridExtra::grid.arrange(grobs = p , ncol=2)
preds_glm <-
titanic_data %>%
add_predictions(model_glm,type = "response") %>%
select(Sex, Fare, Survived, pred)
paste0("The MSE of the GLM is  :",round(MSE(preds_glm$pred,preds$Survived),4))
library(tidyverse)
library(broom)
library(hrbrthemes)
library(ggplot2)
library(modelr)
library(caret)
library(MLmetrics)
library(gridExtra)
libraray(Lahman)
library(tidyverse)
library(broom)
library(hrbrthemes)
library(ggplot2)
library(modelr)
library(caret)
library(MLmetrics)
library(gridExtra)
library(Lahman)
install.packages('Lahman')
library(Lahman)
library(tidyverse)
library(broom)
library(hrbrthemes)
library(ggplot2)
library(modelr)
library(caret)
library(MLmetrics)
library(gridExtra)
library(Lahman)
Teams
titanic_data <- Teams %>%
select(R,BB,H)
bb_data <- Teams %>%
select(R,BB,H)
bb_data
bb_data <- Teams %>%
select(R,BB,H)
graph_2_0 <- ggplot(bb_data, aes(x=BB,y=H,color = R)) +
geom_jitter(height = 0.1,alpha = 0.5,size=1)+
ggtitle("Relation Walks & Hits with Runs")
graph_2_0
bb_data <- Teams %>%
select(R,BB,H)
graph_2_0 <- ggplot(bb_data, aes(x=BB,y=H,color = R)) +
gep_point +
#geom_jitter(height = 0.1,alpha = 0.5,size=1)+
ggtitle("Relation Walks & Hits with Runs")
bb_data <- Teams %>%
select(R,BB,H)
graph_2_0 <- ggplot(bb_data, aes(x=BB,y=H,color = R)) +
geom_point() +
#geom_jitter(height = 0.1,alpha = 0.5,size=1)+
ggtitle("Relation Walks & Hits with Runs")
graph_2_0
library(plotly)
install.packages('plotly')
library(plotly)
library(tidyverse)
library(broom)
library(hrbrthemes)
library(ggplot2)
library(modelr)
library(caret)
library(MLmetrics)
library(gridExtra)
library(Lahman)
library(plotly)
graph_2_0_b <- plot_ly(x = bb_data$BB, y = bb_data$H, z = bb_data$R) %>% add_surface()
graph_2_0_b
graph_2_0_b <- ggplot(bb_data, aes(BB, H)) +
geom_raster(aes(fill = R)) +
ggtitle("3D Plotting in R from 2D_ggplot_graphics") +
labs(caption = "Package: rayshader") +
theme(axis.text = element_text(size = 12),
title = element_text(size = 12,face="bold"),
panel.border= element_rect(size=2,color="black",fill=NA))
graph_2_0_b
graph_2_0_b <- ggplot(bb_data, aes(BB, H)) +
geom_raster(aes(fill = density)) +
ggtitle("3D Plotting in R from 2D_ggplot_graphics") +
labs(caption = "Package: rayshader") +
theme(axis.text = element_text(size = 12),
title = element_text(size = 12,face="bold"),
panel.border= element_rect(size=2,color="black",fill=NA))
graph_2_0_b
graph_2_0_b <- ggplot(bb_data, aes(BB, H)) +
geom_raster(aes(fill = R)) +
ggtitle("3D Plotting in R from 2D_ggplot_graphics") +
labs(caption = "Package: rayshader") +
theme(axis.text = element_text(size = 12),
title = element_text(size = 12,face="bold"),
panel.border= element_rect(size=2,color="black",fill=NA))
graph_2_0_b
attach(orstationc)
ggplot(bb_data, aes(x=BB,y=H,color = R)) +
geom_point() +
#geom_jitter(height = 0.1,alpha = 0.5,size=1)+
ggtitle("Relation Walks & Hits with Runs")
graph_2_0_b <- ggplot(bb_data, aes(x=BB, y=H, size = R)) +
geom_point(alpha=0.7)
graph_2_0_b
graph_2_0_b <- ggplot(bb_data, aes(x=BB, y=H, size = R)) +
geom_point(alpha=0.7) +theme_ipsum()
graph_2_0_b
graph_2_0_b <- ggplot(bb_data, aes(x=BB, y=H, size = R)) +
geom_point(alpha=1)
graph_2_0_b
graph_2_0_b <- ggplot(bb_data, aes(x=BB, y=H, size = R)) +
geom_point(alpha=0.1)
graph_2_0_b
bb_data <- Teams %>%
select(R,BB,H)
graph_2_0_a <- ggplot(bb_data, aes(x=BB,y=H,color = R)) +
geom_point() +
#geom_jitter(height = 0.1,alpha = 0.5,size=1)+
ggtitle("Relation Walks & Hits with Runs")
graph_2_0_a
attach(orstationc)
graph_2_0_b <- ggplot(bb_data, aes(x=BB, y=H, fill = R)) +
geom_tile()
graph_2_0_b
graph_2_0_a <- ggplot(bb_data, aes(x=BB,y=H,color = R)) +
geom_point(size = 2) +
scale_fill_viridis() +
#geom_jitter(height = 0.1,alpha = 0.5,size=1)+
ggtitle("Relation Walks & Hits with Runs")
install.packages("viridis")
library(viridis)
graph_2_0_a <- ggplot(bb_data, aes(x=BB,y=H,color = R)) +
geom_point(size = 2) +
scale_fill_viridis() +
#geom_jitter(height = 0.1,alpha = 0.5,size=1)+
ggtitle("Relation Walks & Hits with Runs")
graph_2_0_a
graph_2_0_a <- ggplot(bb_data, aes(x=BB,y=H,color = R)) +
geom_point(size = 1) +
scale_fill_viridis() +
#geom_jitter(height = 0.1,alpha = 0.5,size=1)+
ggtitle("Relation Walks & Hits with Runs")
graph_2_0_a
graph_2_0_a <- ggplot(bb_data, aes(x=BB,y=H,color = R)) +
geom_point(size = 3) +
scale_fill_viridis() +
#geom_jitter(height = 0.1,alpha = 0.5,size=1)+
ggtitle("Relation Walks & Hits with Runs")
graph_2_0_a
graph_2_0_a
graph_2_0_a <- ggplot(bb_data, aes(x=BB,y=H,color = R)) +
geom_point(stat ='identity') +
scale_fill_viridis() +
ggtitle("Relation Walks & Hits with Runs")
graph_2_0_a
graph_2_0_a <- ggplot(bb_data, aes(x=BB,y=H,color = R)) +
geom_point(size = 3) +
scale_fill_viridis() +
ggtitle("Relation Walks & Hits with Runs")
graph_2_0_a <- ggplot(bb_data, aes(x=BB,y=H,color = R)) +
geom_point(size = 3,aplha=0.5) +
scale_fill_viridis() +
ggtitle("Relation Walks & Hits with Runs")
graph_2_0_a <- ggplot(bb_data, aes(x=BB,y=H,color = R)) +
geom_point(size = 3,alpha=0.5) +
scale_fill_viridis() +
ggtitle("Relation Walks & Hits with Runs")
graph_2_0_a
graph_2_0_a <- ggplot(bb_data, aes(x=BB,y=H,color = R)) +
geom_point(size = 3,alpha=0.7) +
scale_fill_viridis() +
ggtitle("Relation Walks & Hits with Runs")
graph_2_0_a
bb_data <- Teams %>%
select(R,BB,H)
graph_2_0_a <- ggplot(bb_data, aes(x=BB,y=H,color = R)) +
geom_point(size = 3,alpha=0.7) +
scale_fill_viridis() +
ggtitle("Relation Walks & Hits with Runs")
graph_2_0_a
graph_2_0_b <- ggpairs(bb_data)
bb_data <- Teams %>%
select(R,BB,H)
graph_2_0_a <- ggplot(bb_data, aes(x=BB,y=H,color = R)) +
geom_point(size = 3,alpha=0.7) +
scale_fill_viridis() +
ggtitle("Relation Walks & Hits with Runs")
graph_2_0_a
graph_2_0_b <- ggpairs(bb_data)
graph_2_0_b <- ggpairs(bb_data)
install.packages('GGally')
library(GGally)
graph_2_0_b <- ggpairs(bb_data)
graph_2_0_b
model_glm <- glm(Survived~Fare+Sex, data = titanic_data, family = binomial)
titanic_data <- read_csv("titanic.csv")
graph_1_0_a <- ggplot(titanic_data, aes(x=Fare,y=Survived,color = Sex)) +
geom_jitter(height = 0.1,alpha = 0.5,size=1)+
ggtitle("Relation Fare and Sex vs Survival")+ facet_grid(. ~ Sex)
graph_1_0_b <- ggplot(titanic_data, aes(x=Fare,y=Sex,color = Survived)) +
geom_jitter(height = 0.1,alpha = 0.5,size=1)+
ggtitle("Relation Fare and Sex vs Survival")
graph_1_0_a
graph_1_0_b
titanic_data <- read_csv("titanic.csv")
model_add <- lm(Survived~Fare+Sex, data =titanic_data)
tidy(model_add)%>%mutate_if(is.numeric, round, 7)
graph_1_1 <- ggplot(titanic_data, aes(x=Fare,y=Survived,color = Sex)) +
geom_jitter(height = 0.1,alpha = 0.5,size=1)+
stat_smooth(method = "lm") +
ggtitle("Relation Fare and Sex vs Survival")+ facet_grid(. ~ Sex)
graph_1_1
model <- glm(data = titanic_data,Survived~Fare+Sex,family = "binomial")
graph_1_2 <- ggplot(titanic_data, aes(x=Fare,y=Survived,color = Sex)) +
geom_jitter(height = 0.1,alpha = 0.5,size=1)+
ggtitle("Binary Regression Model") + facet_grid(. ~ Sex)
graph_1_2+geom_smooth(method = "glm", method.args = c(family = "binomial"), se = FALSE)
summary(model)
tidy(model)%>%mutate_if(is.numeric, round, 7)
model_glm <- glm(Survived~Fare+Sex, data = titanic_data, family = binomial)
null_model <- glm(data = titanic_data,Survived~1,family = "binomial")
new_data <- tibble(Sex ="female",Fare = 100)
predict(model_glm,new_data,type ='response')
predict(null_model,new_data,type ='response')
options(repr.plot.height = 400, repr.plot.width = 60)
p <- list()
i <- 1
k_list = c(1,10,50,100)
for (k in k_list){
knn_model <- knnreg(Survived~Fare+Sex, data = titanic_data, k = k)
#  Predictions
preds <-
titanic_data %>%
add_predictions(knn_model,type = "response") %>%
select(Sex, Fare, Survived, pred)
MSE <- round(MSE(preds$pred,preds$Survived),4)
# Plotting
p[[i]] <- graph_1_2 +
geom_line(aes(x=Fare,y= pred,color = Sex),  data = preds ) +
theme(plot.title = element_text(size=12), axis.text = element_text(size=5), axis.title = element_text(size=5)) +
ggtitle(paste0("K = ", k, "  MSE = ", MSE))
i <- i + 1
}
gridExtra::grid.arrange(grobs = p , ncol=2)
preds_glm <-
titanic_data %>%
add_predictions(model_glm,type = "response") %>%
select(Sex, Fare, Survived, pred)
paste0("The MSE of the GLM is  :",round(MSE(preds_glm$pred,preds$Survived),4))
bb_data <- Teams %>%
select(R,BB,H)
graph_2_0_a <- ggplot(bb_data, aes(x=BB,y=H,color = R)) +
geom_point(size = 3,alpha=0.7) +
scale_fill_viridis() +
ggtitle("Relation Walks & Hits with Runs")
graph_2_0_a
graph_2_0_b <- ggpairs(bb_data)
graph_2_0_b
model_glm <- glm(Survived~Fare+Sex, data = titanic_data, family = binomial)
null_model <- glm(data = titanic_data,Survived~1,family = "binomial")
new_data <- tibble(Sex ="female",Fare = 100)
predict(model_glm,new_data,type ='response')
predict(null_model,new_data,type ='response')
model_poission <- glm(data = bb_data,R~H+BB,family=poisson)
summary(model_poission)
tidy(model)
model_poission <- glm(data = bb_data,R~H+BB,family=poisson)
tidy(model)
tidy(model_poission)
bb_data$Residuals <- residuals(model_poission, type="response")
bb_data
bb_data$Residuals <- residuals(model_poission, type="response")
residuals(model_poission, type="response")
res <- residuals(model_poission, type="response")
res <- residuals(model_poission, type="response")
res <- residuals(model_poission, type="response")
res <- residuals(model_poission, type="response")
model_poission <- glm(data = bb_data,R~H+BB,family=poisson)
model_poission <- glm(data = bb_data,R~H+BB,family=poisson)
model_poission <- glm(data = bb_data,R~H+BB,family=poisson)
res <- residuals(model_poission, type="response")
bb_data$Residuals <- residuals(model_poission, type="response")
res <- residuals(model_poission, type="response")
res
size(res)
length(res)
model_poission <- glm(data = bb_data,R~H+BB,family='poisson')
res <- residuals(model_poission, type="response")
length(res)
length(bb_data)
length(bb_data)
bb_data <- Teams %>%
select(R,BB,H)
(data = bb_data,R~H+BB,family='poisson')
model_poission <- glm(data = bb_data,R~H+BB,family='poisson')
res <- residuals(model_poission, type="response")
length(res)
length(bb_data)
bb_data
bb_data
bb_data$Residuals <- residuals(model_poission)
library(tidyverse)
library(broom)
library(hrbrthemes)
library(ggplot2)
library(modelr)
library(caret)
library(MLmetrics)
library(gridExtra)
library(Lahman)
library(plotly)
library(viridis)
library(GGally)
model_poission <- glm(data = bb_data,R~H+BB,family=poisson)
titanic_data <- read_csv("titanic.csv")
graph_1_0_a <- ggplot(titanic_data, aes(x=Fare,y=Survived,color = Sex)) +
geom_jitter(height = 0.1,alpha = 0.5,size=1)+
ggtitle("Relation Fare and Sex vs Survival")+ facet_grid(. ~ Sex)
graph_1_0_b <- ggplot(titanic_data, aes(x=Fare,y=Sex,color = Survived)) +
geom_jitter(height = 0.1,alpha = 0.5,size=1)+
ggtitle("Relation Fare and Sex vs Survival")
graph_1_0_a
graph_1_0_b
library(tidyverse)
library(broom)
library(hrbrthemes)
library(ggplot2)
library(modelr)
library(caret)
library(MLmetrics)
library(gridExtra)
library(Lahman)
library(plotly)
library(viridis)
library(GGally)
titanic_data <- read_csv("titanic.csv")
model_add <- lm(Survived~Fare+Sex, data =titanic_data)
tidy(model_add)%>%mutate_if(is.numeric, round, 7)
graph_1_1 <- ggplot(titanic_data, aes(x=Fare,y=Survived,color = Sex)) +
geom_jitter(height = 0.1,alpha = 0.5,size=1)+
stat_smooth(method = "lm") +
ggtitle("Relation Fare and Sex vs Survival")+ facet_grid(. ~ Sex)
graph_1_1
model <- glm(data = titanic_data,Survived~Fare+Sex,family = "binomial")
graph_1_2 <- ggplot(titanic_data, aes(x=Fare,y=Survived,color = Sex)) +
geom_jitter(height = 0.1,alpha = 0.5,size=1)+
ggtitle("Binary Regression Model") + facet_grid(. ~ Sex)
graph_1_2+geom_smooth(method = "glm", method.args = c(family = "binomial"), se = FALSE)
summary(model)
tidy(model)%>%mutate_if(is.numeric, round, 7)
model_glm <- glm(Survived~Fare+Sex, data = titanic_data, family = binomial)
null_model <- glm(data = titanic_data,Survived~1,family = "binomial")
new_data <- tibble(Sex ="female",Fare = 100)
predict(model_glm,new_data,type ='response')
predict(null_model,new_data,type ='response')
options(repr.plot.height = 400, repr.plot.width = 60)
p <- list()
i <- 1
k_list = c(1,10,50,100)
for (k in k_list){
knn_model <- knnreg(Survived~Fare+Sex, data = titanic_data, k = k)
#  Predictions
preds <-
titanic_data %>%
add_predictions(knn_model,type = "response") %>%
select(Sex, Fare, Survived, pred)
MSE <- round(MSE(preds$pred,preds$Survived),4)
# Plotting
p[[i]] <- graph_1_2 +
geom_line(aes(x=Fare,y= pred,color = Sex),  data = preds ) +
theme(plot.title = element_text(size=12), axis.text = element_text(size=5), axis.title = element_text(size=5)) +
ggtitle(paste0("K = ", k, "  MSE = ", MSE))
i <- i + 1
}
gridExtra::grid.arrange(grobs = p , ncol=2)
preds_glm <-
titanic_data %>%
add_predictions(model_glm,type = "response") %>%
select(Sex, Fare, Survived, pred)
paste0("The MSE of the GLM is  :",round(MSE(preds_glm$pred,preds$Survived),4))
bb_data <- Teams %>%
select(R,BB,H)
graph_2_0_a <- ggplot(bb_data, aes(x=BB,y=H,color = R)) +
geom_point(size = 3,alpha=0.7) +
scale_fill_viridis() +
ggtitle("Relation Walks & Hits with Runs")
graph_2_0_a
graph_2_0_b <- ggpairs(bb_data)
graph_2_0_b
model_poission <- glm(data = bb_data,R~H+BB,family=poisson)
tidy(model_poission)
bb_data
model_poission <- glm(data = bb_data,R~H+BB,family=poisson)
bb_data$Residuals <- residuals(model_poission)
bb_data$Residuals <- NA
bb_data$Residuals <- residuals(model_poission)
bb_data$Residuals <- na.omit(residuals(model_poission))
bb_data$Residuals <- NA
bb_data$Residuals <- na.omit(residuals(model_poission))
bb_data <- Teams %>%
select(R,BB,H) %>%
na.omit
graph_2_0_a <- ggplot(bb_data, aes(x=BB,y=H,color = R)) +
geom_point(size = 3,alpha=0.7) +
scale_fill_viridis() +
ggtitle("Relation Walks & Hits with Runs")
graph_2_0_a
graph_2_0_b <- ggpairs(bb_data)
graph_2_0_b
bb_data
model_poission <- glm(data = bb_data,R~H+BB,family=poisson)
bb_data$Residuals <- na.omit(residuals(model_poission))
bb_data
tidy(model_poission)
bb_data
model_poission <- glm(data = bb_data,R~H+BB,family=poisson)
bb_data$Residuals <- residuals(model_poission)
bb_data
tidy(model_poission)
bb_data
bb_data
model_poission <- glm(data = bb_data,R~H+BB,family=poisson)
bb_data$Residuals <- residuals(model_poission,type = response)
bb_data$Residuals <- residuals(model_poission,type = 'response')
bb_data
bb_data$Residuals <- residuals(model_poission,type = 'response')
plot_2_3 <- ggplot(aes(x=Residual,y = H))+
geom_point()
plot_2_3 <- ggplot(data = bb_data,aes(x=Residual,y = H))+
geom_point()
plot_2_3
plot_2_3 <- ggplot(data = bb_data,aes(x=Residuals,y = H))+
geom_point()
plot_2_3
bb_data$Residuals <- residuals(model_poission,type = 'response')
plot_2_3 <- ggplot(data = bb_data,aes(x=H,y = Residuals))+
geom_point()
plot_2_3
bb_data$Preds <- add_predictions(model_poission,type = "response")
bb_data$Residuals <- residuals(model_poission,type = 'response')
bb_data$Preds <- add_predictions(model_poission,type = "response")
bb_data$Preds <- add_predictions(model = model_poission,type = "response")
bb_data$Preds <- add_predictions(data = bb_data,model_poission,type = "response")
bb_data$Residuals <- residuals(model_poission,type = 'response')
bb_data$Preds <- add_predictions(data = bb_data,model_poission,type = "response")
plot_2_3 <- ggplot(data = bb_data,aes(x=H,y = Residuals))+
geom_point() +  scale_fill_viridis() +
ggtitle("Residuals vs & Hits with Runs")
plot_2_3
bb_data
bb_data$Preds <- predict(model_poission,type = "response")
bb_data
bb_data$Residuals <- residuals(model_poission,type = 'response')
bb_data$Preds <- predict(model_poission,type = "response")
bb_data
plot_2_3 <- ggplot(data = bb_data,aes(x=Preds,y = Residuals))+
geom_point() +  scale_fill_viridis() +
ggtitle("Residuals vs & Hits with Runs")
plot_2_3
bb_data$Residuals <- residuals(model_poission,type = 'response')
bb_data$Preds <- predict(model_poission,type = "response")
bb_data
plot_2_3 <- ggplot(data = bb_data,aes(x=Preds,y = Residuals))+
geom_point() +  scale_fill_viridis() +
ggtitle("Residuals vs & Predicted Runs")
plot_2_3
setwd("~/Lab/522_Workflows/group_project/DSCI-522_City_of_A-Stars_310")
